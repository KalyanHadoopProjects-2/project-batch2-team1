twitter-agent.sources = Twitter
twitter-agent.channels = MemChannel
twitter-agent.sinks = HDFS
twitter-agent.sources.Twitter.type = org.apache.flume.source.twitter.TwitterSour
twitter-agent.sources.Twitter.channels = MemChannel
twitter-agent.sources.Twitter.consumerKey =*******
twitter-agent.sources.Twitter.consumerSecret =*******
twitter-agent.sources.Twitter.accessToken =*******
twitter-agent.sources.Twitter.accessTokenSecret =**********
twitter-agent.sources.Twitter.keywords = hadoop, big data, analytics, bigdata, cuse, data warehousing, mahout, hbase, nosql, newsql, businessintelligence, cloud
twitter-agent.sinks.HDFS.channel = MemChannel
twitter-agent.sinks.HDFS.type = hdfs
twitter-agent.sinks.HDFS.hdfs.path = hdfs://localhost:8020/user/orienit/flume/tweets
twitter-agent.sinks.HDFS.hdfs.fileType = DataStream
twitter-agent.sinks.HDFS.hdfs.writeFormat = Json
twitter-agent.sinks.HDFS.hdfs.batchSize = 1000
twitter-agent.sinks.HDFS.hdfs.rollSize = 0
twitter-agent.sinks.HDFS.hdfs.rollCount = 10000
twitter-agent.sinks.HDFS.hdfs.useLocalTimeStamp = true
twitter-agent.channels.MemChannel.type = memory
twitter-agent.channels.MemChannel.capacity = 10000
twitter-agent.channels.MemChannel.transactionCapacity = 100



command:::
------------
 flume-ng agent --conf /usr/lib/flume-ng/conf/ -f /usr/lib/flume-ng/conf/twitter-agent.conf -Dflume.root.logger=DEBUG,console -n twitter-agent


Creating hive table::

add jar /usr/lib/avro/avro.jar

CREATE EXTERNAL TABLE IF NOT EXISTS twitter( data string )
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.avro.AvroSerDe'
STORED AS
INPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat'
OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat';

LOAD DATA INPATH '/user/orienit/flume/tweets/FlumeData.1517536226280' INTO TABLE twitter;







